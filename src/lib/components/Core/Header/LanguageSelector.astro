---
import i18n, { astroI18n, t, l, extractRouteLangCode, appendQueryString, createStaticPaths } from "astro-i18n";

import { flagsIcons } from "@/lib/config/icons";

import Icon from "astro-icon";
import LangSwitch from "./LangSwitch.svelte";

interface languageMapping {
  [localeCode: string]: string;
}

export interface Props extends astroHTML.JSX.SelectHTMLAttributes {
  languageMapping?: languageMapping;
}

const supportedLanguages = astroI18n.langCodes;

let { pathname } = Astro.url;
pathname = pathname.substring(1);

const { languageMapping, ...attributes } = Astro.props;
---

<LangSwitch 
  client:load
  ariaLabel={`${t('common.actions.change_language')}`}
  languageMapping={languageMapping}
  pathname={pathname}
>
  {
    supportedLanguages.map((supportedLanguage: string) => {
      // let value = localizePath(pathname, supportedLanguage);
      let value = l(pathname, undefined, supportedLanguage);

      return (
        <a href={value} 
          class="
            flex flex-row items-center jutify-start gap-2 
            px-4 py-2
            bg-surface-300 dark:bg-surface-700 hover:bg-surface-400 dark:hover:bg-surface-600">

            <div class="w-6 h-6 rounded-full overflow-hidden border-primary border">
              <Icon class="w-full h-auto" name={`emojione:${flagsIcons[supportedLanguage]}`} />
            </div>
            <div class="flex flex-col gap-0 items-start justify-center text-surface-800 dark:text-surface-200">
              <span class="font-semibold">{t("common.geo." + supportedLanguage + ".lang")}</span>
              <span class="text-sm italic">{ supportedLanguage === 'en' ? 'English' : supportedLanguage === 'nl' ? 'Nederlands': 'Error' }</span>
            </div>
        </a>
      );
    })
  }
</LangSwitch>