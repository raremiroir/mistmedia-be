---
//@ts-ignore
import { t, l, astroI18n } from "astro-i18n"
import Popup from '@comp/Utils/Popup.svelte'
import Icon from "astro-icon";

// Get current locale
const currentLocale = astroI18n.langCode;
// Get all available locales and remove currentLocale
const availableLocales: string[] = astroI18n.langCodes.filter((lang: string) => lang !== currentLocale);
const routesToSwitchLanguage = astroI18n.langCodes
	.filter((langCode: string) => langCode !== astroI18n.langCode) // optional (excludes current language)
	.map((langCode: string) => l(Astro.url.pathname as any, {}, langCode as any))

// Match available locales with corresponding route
let availableLangs: {[key: string]: string} = {};
availableLocales.forEach((locale: string) => {
   availableLangs[locale] = routesToSwitchLanguage[availableLocales.indexOf(locale)];
});
---

<Popup client:load>
   <div slot="trigger" class="
   btn btn-sm opacity-60 hover:opacity-100
   variant-outline-surface 
   hover:variant-ghost-primary 
   hover:text-primary-900 dark:hover:text-primary-200 
   hover:ring-primary-700 dark:hover:ring-primary 
   flex items-center justify-center">
      <Icon class="w-4 h-auto" name={`emojione:flag-for-${currentLocale === 'nl' ? 'belgium' : currentLocale === 'en' ? 'united-kingdom' : ''}`} />
      <span class="text-xs pb-1">|</span>
      <span class="text-xs">{currentLocale.toUpperCase()}</span>
   </div>
   <ul class="flex flex-col gap-1">
      { Object.keys(availableLangs).map((locale) => (
         <li>
            <a title={`${t('common.actions.change_language_to')} ${t(`common.geo.lang.${locale}`)}`}
               aria-label={`${t('common.actions.change_language_to')} ${t(`common.geo.lang.${locale}`)}`}
               href={availableLangs[locale]}
               class={`
                  btn btn-sm px-4 py-1 w-full 
                  flex items-center justify-start gap-1
                  ${locale === currentLocale ? 'variant-soft-primary' : 'hover:variant-outline-primary'}
            `}>
               <Icon class="w-6" name={`emojione:flag-for-${locale === 'nl' ? 'belgium' : locale === 'en' ? 'united-kingdom' : ''}`} />
               <div class="text-primary-700-200-token flex flex-col items-start justify-start w-full text-sm leading-snug">
                  { locale === 'en' ? 'English' 
                  : locale === 'nl' ? 'Nederlands' 
                  : 'Error'}
                  <span class="text-xs italic text-surface-600 dark:text-surface-400 capitalize drop-shadow-none font-medium">
                     {t(`common.geo.lang.${locale}`)}
                  </span>
               </div>
            </a>
         </li>
      ))}
   </ul>
</Popup>


